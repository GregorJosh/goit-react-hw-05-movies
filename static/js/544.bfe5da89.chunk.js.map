{"version":3,"file":"static/js/544.bfe5da89.chunk.js","mappings":"+SAEMA,EACJ,sNAKIC,EAAM,IAAIC,IADH,MADA,8BAEb,SAEeC,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,GAA3B,iGAE2BC,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRL,IAAKA,EAAIM,KAAOH,EAChBI,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAAYV,KAPnC,UAW4B,OATlBW,EAFV,QAWiBC,OAXjB,yCAYaD,EAASE,MAZtB,uDAeQ,KAAMF,SACRG,QAAQC,MACN,+DAEO,KAAMC,QACfF,QAAQC,MACN,qEAGFD,QAAQC,MAAM,sDACdD,QAAQC,MAAR,OAzBN,iFA8BO,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,oGACgBd,EAAY,sBAD5B,cACCe,EADD,yBAGEA,EAAOC,SAHT,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,uFACgBlB,EAAY,sBAAwBkB,GADpD,cACCH,EADD,yBAGEA,EAAOC,SAHT,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACepB,EAAY,SAAWoB,GADtC,cACCC,EADD,QAGCC,YAAc,iCAAmCD,EAAMC,YAHxD,kBAKED,GALF,kEAQA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,uFACiBpB,EAAY,SAAD,OAAUoB,EAAV,aAD5B,cACCI,EADD,yBAGEA,EAAQC,KAAKC,QAAO,SAAAD,GACzB,OAA0B,OAAtBA,EAAKE,eAITF,EAAKE,aAAe,iCAAmCF,EAAKE,cAErD,EACR,KAXI,kEAcA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BR,GAA/B,uFACiBpB,EAAY,SAAD,OAAUoB,EAAV,aAD5B,cACCS,EADD,yBAGEA,EAAQb,SAHV,kE,2ECzEP,GAAgB,KAAO,6B,SCqBvB,EAlBsB,SAAC,GAAe,IAAbK,EAAY,EAAZA,MACfS,EAAcT,EAAdS,GAAIC,EAAUV,EAAVU,MACJC,EAAeC,EAAAA,KAATC,EAASD,EAAAA,KACvB,GAA6BE,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAElB,OACE,eAAIC,UAAWN,EAAf,UACE,SAAC,KAAD,CACEM,UAAWJ,EACXK,GAAI,WAAaT,EACjBU,MAAO,CAAEC,KAAML,EAAWC,GAH5B,SAKGN,KAIR,ECnBD,EAAuB,wBCevB,EAZkB,SAAC,GAAgB,IAAdhB,EAAa,EAAbA,OACX2B,EAAST,EAEjB,OACE,eAAIK,UAAWI,EAAf,SACG3B,EAAO4B,KAAI,SAAAtB,GAAK,OACf,SAAC,EAAD,CAA8BA,MAAOA,GAAjBA,EAAMS,GADX,KAKtB,C,8ECED,UAVa,WACX,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAO7B,EAAP,KAAe8B,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRhC,EAAAA,EAAAA,MAAoBiC,MAAK,SAAAhC,GAAM,OAAI8B,EAAU9B,EAAd,GAChC,GAAE,KAEI,SAAC,IAAD,CAAWA,OAAQA,GAC3B,C","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYjg0NzNlZDkyMjFiZjUxZjY1ZjYyMzFmZWM1ZGNhNiIsInN1YiI6IjY0YjlhODFmMzAwOWFhMDBjNWI3OTc1MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-kZ0dgbGdwQSV2jydkgQdOLeOv-bFL8HeHwItjiQ9dk';\n\nconst host = 'api.themoviedb.org';\nconst base = 'https://' + host;\nconst path = '/3/';\nconst url = new URL(path, base);\n\nasync function sendRequest(path) {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: url.href + path,\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer ' + API_KEY,\n      },\n    });\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error.response) {\n      console.error(\n        'Axios: Request made but the server responded with an error.'\n      );\n    } else if (error.request) {\n      console.error(\n        'Axios: Request made but no response is received from the server.'\n      );\n    } else {\n      console.error('Axios: Error occured while setting up the request.');\n      console.error(error);\n    }\n  }\n}\n\nexport async function getTrendingMovies() {\n  const movies = await sendRequest('trending/movie/day');\n\n  return movies.results;\n}\n\nexport async function getMoviesByKeyword(keyword) {\n  const movies = await sendRequest('search/movie?query=' + keyword);\n\n  return movies.results;\n}\n\nexport async function getMovieById(movieId) {\n  const movie = await sendRequest('movie/' + movieId);\n\n  movie.poster_path = 'http://image.tmdb.org/t/p/w185' + movie.poster_path;\n\n  return movie;\n}\n\nexport async function getMovieCredits(movieId) {\n  const credits = await sendRequest(`movie/${movieId}/credits`);\n\n  return credits.cast.filter(cast => {\n    if (cast.profile_path === null) {\n      return false;\n    }\n\n    cast.profile_path = 'http://image.tmdb.org/t/p/w185' + cast.profile_path;\n\n    return true;\n  });\n}\n\nexport async function getMovieReviews(movieId) {\n  const reviews = await sendRequest(`movie/${movieId}/reviews`);\n\n  return reviews.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieListItem_link__LGsEq\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport styles from './MovieListItem.module.css';\n\nconst MovieListItem = ({ movie }) => {\n  const { id, title } = movie;\n  const { item, link } = styles;\n  const { pathname, search } = useLocation();\n\n  return (\n    <li className={item}>\n      <Link\n        className={link}\n        to={'/movies/' + id}\n        state={{ from: pathname + search }}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import MovieListItem from 'components/MovieListItem/MovieListItem';\n\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n  const { list } = styles;\n\n  return (\n    <ul className={list}>\n      {movies.map(movie => (\n        <MovieListItem key={movie.id} movie={movie} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\n\nimport { getTrendingMovies } from 'api/api';\n\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(movies => setMovies(movies));\n  }, []);\n\n  return <MovieList movies={movies} />;\n};\n\nexport default Home;\n"],"names":["API_KEY","url","URL","sendRequest","path","axios","method","href","headers","accept","Authorization","response","status","data","console","error","request","getTrendingMovies","movies","results","getMoviesByKeyword","keyword","getMovieById","movieId","movie","poster_path","getMovieCredits","credits","cast","filter","profile_path","getMovieReviews","reviews","id","title","item","styles","link","useLocation","pathname","search","className","to","state","from","list","map","useState","setMovies","useEffect","then"],"sourceRoot":""}