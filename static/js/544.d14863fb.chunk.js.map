{"version":3,"file":"static/js/544.d14863fb.chunk.js","mappings":"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","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYjg0NzNlZDkyMjFiZjUxZjY1ZjYyMzFmZWM1ZGNhNiIsInN1YiI6IjY0YjlhODFmMzAwOWFhMDBjNWI3OTc1MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-kZ0dgbGdwQSV2jydkgQdOLeOv-bFL8HeHwItjiQ9dk';\n\nconst base = 'https://api.themoviedb.org';\nconst path = '/3/';\nconst url = new URL(path, base);\n\nfunction setImagesSize(results, fieldName, size) {\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/';\n\n  if (Array.isArray(results)) {\n    return results.map(result => {\n      if (result[fieldName]) {\n        result[fieldName] = imageBaseUrl + size + result[fieldName];\n      }\n\n      return result;\n    });\n  } else {\n    const result = results;\n\n    if (result[fieldName]) {\n      result[fieldName] = imageBaseUrl + size + result[fieldName];\n    }\n\n    return result;\n  }\n}\n\nasync function sendRequest(path) {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: url.href + path,\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer ' + API_KEY,\n      },\n    });\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error.response) {\n      console.error(\n        'Axios: Request made but the server responded with an error.'\n      );\n    } else if (error.request) {\n      console.error(\n        'Axios: Request made but no response is received from the server.'\n      );\n    } else {\n      console.error('Axios: Error occured while setting up the request.');\n      console.error(error);\n    }\n  }\n}\n\nexport async function getTrendingMovies() {\n  const movies = await sendRequest('trending/movie/day');\n\n  return setImagesSize(movies.results, 'poster_path', 'w185');\n}\n\nexport async function getMoviesByKeyword(keyword) {\n  const movies = await sendRequest('search/movie?query=' + keyword);\n\n  return setImagesSize(movies.results, 'poster_path', 'w185');\n}\n\nexport async function getMovieById(movieId) {\n  const movie = await sendRequest('movie/' + movieId);\n\n  return setImagesSize(movie, 'poster_path', 'w185');\n}\n\nexport async function getMovieCredits(movieId) {\n  const credits = await sendRequest(`movie/${movieId}/credits`);\n\n  return setImagesSize(credits.cast, 'profile_path', 'w185');\n}\n\nexport async function getMovieReviews(movieId) {\n  const reviews = await sendRequest(`movie/${movieId}/reviews`);\n\n  return reviews.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieListItem_item__mMQpx\",\"image\":\"MovieListItem_image__nMlwl\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './MovieListItem.module.css';\n\nconst MovieListItem = ({ movie }) => {\n  const { id, title, poster_path } = movie;\n  const { item, image } = styles;\n  const { pathname, search } = useLocation();\n\n  return (\n    <li className={item}>\n      <Link\n        to={'/movies/' + id}\n        state={{ from: pathname + search }}\n      >\n        <img className={image} src={poster_path} alt={title + ' movie poster'} />\n      </Link>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }),\n};\n\nexport default MovieListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import PropTypes from 'prop-types';\n\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\n\nimport styles from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n  const { list } = styles;\n\n  return (\n    <ul className={list}>\n      {movies.map(movie => (\n        <MovieListItem key={movie.id} movie={movie} />\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\n\nimport { getTrendingMovies } from 'api/api';\n\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(movies => setMovies(movies));\n  }, []);\n\n  return <MovieList movies={movies} />;\n};\n\nexport default Home;\n"],"names":["API_KEY","url","URL","setImagesSize","results","fieldName","size","imageBaseUrl","Array","isArray","map","result","sendRequest","path","axios","method","href","headers","accept","Authorization","response","status","data","console","error","request","getTrendingMovies","movies","getMoviesByKeyword","keyword","getMovieById","movieId","movie","getMovieCredits","credits","cast","getMovieReviews","reviews","id","title","poster_path","item","styles","image","useLocation","pathname","search","className","to","state","from","src","alt","list","useState","setMovies","useEffect","then"],"sourceRoot":""}