{"version":3,"file":"static/js/866.96498283.chunk.js","mappings":"+SAEMA,EACJ,sNAIIC,EAAM,IAAIC,IADH,MADA,8BAIb,SAASC,EAAcC,EAASC,EAAWC,GACzC,IAAMC,EAAe,8BAErB,GAAIC,MAAMC,QAAQL,GAChB,OAAOA,EAAQM,KAAI,SAAAC,GAKjB,OAJIA,EAAON,KACTM,EAAON,GAAaE,EAAeD,EAAOK,EAAON,IAG5CM,CACR,IAED,IAAMA,EAASP,EAMf,OAJIO,EAAON,KACTM,EAAON,GAAaE,EAAeD,EAAOK,EAAON,IAG5CM,CAEV,UAEcC,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,GAA3B,iGAE2BC,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRd,IAAKA,EAAIe,KAAOH,EAChBI,QAAS,CACPC,OAAQ,mBACRC,cAAe,UAAYnB,KAPnC,UAW4B,OATlBoB,EAFV,QAWiBC,OAXjB,yCAYaD,EAASE,MAZtB,uDAeQ,KAAMF,SACRG,QAAQC,MACN,+DAEO,KAAMC,QACfF,QAAQC,MACN,qEAGFD,QAAQC,MAAM,sDACdD,QAAQC,MAAR,OAzBN,iFA8BO,SAAeE,IAAtB,4CAAO,OAAP,oBAAO,oGACgBd,EAAY,sBAD5B,cACCe,EADD,yBAGExB,EAAcwB,EAAOvB,QAAS,cAAe,SAH/C,kEAMA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,uFACgBjB,EAAY,sBAAwBiB,GADpD,cACCF,EADD,yBAGExB,EAAcwB,EAAOvB,QAAS,cAAe,SAH/C,kEAMA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACenB,EAAY,SAAWmB,GADtC,cACCC,EADD,yBAGE7B,EAAc6B,EAAO,cAAe,SAHtC,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,uFACiBnB,EAAY,SAAD,OAAUmB,EAAV,aAD5B,cACCG,EADD,yBAGE/B,EAAc+B,EAAQC,KAAM,eAAgB,SAH9C,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,uFACiBnB,EAAY,SAAD,OAAUmB,EAAV,aAD5B,cACCM,EADD,yBAGEA,EAAQjC,SAHV,kE,2GCpFP,EAAuB,sB,SCkCvB,EA5BgB,WACd,IAAQ2B,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOF,EAAP,KAAgBG,EAAhB,KAEQC,EAASC,EAMjB,OAJAC,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAgBL,GAASa,MAAK,SAAAP,GAAO,OAAIG,EAAWH,EAAf,GACtC,GAAE,CAACN,KAGF,8BACGM,EAAQQ,OAAS,GAChB,eAAIC,UAAWL,EAAf,SACGJ,EAAQ3B,KAAI,gBAAGqC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADE,OAQf,uBAAG,8CAIV,C","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY =\n  'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkYjg0NzNlZDkyMjFiZjUxZjY1ZjYyMzFmZWM1ZGNhNiIsInN1YiI6IjY0YjlhODFmMzAwOWFhMDBjNWI3OTc1MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-kZ0dgbGdwQSV2jydkgQdOLeOv-bFL8HeHwItjiQ9dk';\n\nconst base = 'https://api.themoviedb.org';\nconst path = '/3/';\nconst url = new URL(path, base);\n\nfunction setImagesSize(results, fieldName, size) {\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/';\n\n  if (Array.isArray(results)) {\n    return results.map(result => {\n      if (result[fieldName]) {\n        result[fieldName] = imageBaseUrl + size + result[fieldName];\n      }\n\n      return result;\n    });\n  } else {\n    const result = results;\n\n    if (result[fieldName]) {\n      result[fieldName] = imageBaseUrl + size + result[fieldName];\n    }\n\n    return result;\n  }\n}\n\nasync function sendRequest(path) {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: url.href + path,\n      headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer ' + API_KEY,\n      },\n    });\n\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    if (error.response) {\n      console.error(\n        'Axios: Request made but the server responded with an error.'\n      );\n    } else if (error.request) {\n      console.error(\n        'Axios: Request made but no response is received from the server.'\n      );\n    } else {\n      console.error('Axios: Error occured while setting up the request.');\n      console.error(error);\n    }\n  }\n}\n\nexport async function getTrendingMovies() {\n  const movies = await sendRequest('trending/movie/day');\n\n  return setImagesSize(movies.results, 'poster_path', 'w185');\n}\n\nexport async function getMoviesByKeyword(keyword) {\n  const movies = await sendRequest('search/movie?query=' + keyword);\n\n  return setImagesSize(movies.results, 'poster_path', 'w185');\n}\n\nexport async function getMovieById(movieId) {\n  const movie = await sendRequest('movie/' + movieId);\n\n  return setImagesSize(movie, 'poster_path', 'w185');\n}\n\nexport async function getMovieCredits(movieId) {\n  const credits = await sendRequest(`movie/${movieId}/credits`);\n\n  return setImagesSize(credits.cast, 'profile_path', 'w185');\n}\n\nexport async function getMovieReviews(movieId) {\n  const reviews = await sendRequest(`movie/${movieId}/reviews`);\n\n  return reviews.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__pCzae\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'api/api';\n\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const { list } = styles;\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(reviews => setReviews(reviews));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul className={list}>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","url","URL","setImagesSize","results","fieldName","size","imageBaseUrl","Array","isArray","map","result","sendRequest","path","axios","method","href","headers","accept","Authorization","response","status","data","console","error","request","getTrendingMovies","movies","getMoviesByKeyword","keyword","getMovieById","movieId","movie","getMovieCredits","credits","cast","getMovieReviews","reviews","useParams","useState","setReviews","list","styles","useEffect","then","length","className","author","content","id"],"sourceRoot":""}